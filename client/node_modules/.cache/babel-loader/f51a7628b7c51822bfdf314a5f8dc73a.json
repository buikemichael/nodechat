{"ast":null,"code":"var _jsxFileName = \"/Users/laptop/Desktop/programming/nodechat/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [response, setResponse] = useState([]);\n  useEffect(() => {\n    const socket = io(\"http://127.0.0.1:3005\");\n    socket.on(\"chat message\", function (data) {\n      setResponse([...response, data]);\n    });\n  }, [response]);\n\n  const submitForm = e => {\n    e.preventDefault();\n    const socket = io(\"http://127.0.0.1:3005\");\n    socket.emit(\"chat message\", message);\n    setMessage(\"\");\n  }; // const allmsg = response.map(res=>{\n  //     console.log(res)\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input\",\n        onChange: e => {\n          setMessage(e.target.value);\n        },\n        value: message,\n        autocomplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitForm,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), console.log(newRes)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"EW37LLO4BvCRTtero0UznFi4FfI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/laptop/Desktop/programming/nodechat/client/src/Dashboard.js"],"names":["React","useState","useEffect","io","Dashboard","message","setMessage","response","setResponse","socket","on","data","submitForm","e","preventDefault","emit","target","value","console","log","newRes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,MAAM,GAAGN,EAAE,CAAC,uBAAD,CAAjB;AACAM,IAAAA,MAAM,CAACC,EAAP,CAAU,cAAV,EAA0B,UAAUC,IAAV,EAAgB;AACzCH,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcI,IAAd,CAAD,CAAX;AACA,KAFD;AAGD,GALQ,EAKN,CAACJ,QAAD,CALM,CAAT;;AAMA,QAAMK,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAML,MAAM,GAAGN,EAAE,CAAC,uBAAD,CAAjB;AACAM,IAAAA,MAAM,CAACM,IAAP,CAAY,cAAZ,EAA4BV,OAA5B;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GALD,CATmB,CAenB;AACA;AACA;;;AACA,sBACE;AAAA,4BACE;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,MAAM,EAAC,EAAvB;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,QAAQ,EAAGO,CAAD,IAAO;AACfP,UAAAA,UAAU,CAACO,CAAC,CAACG,MAAF,CAASC,KAAV,CAAV;AACD,SAJH;AAKE,QAAA,KAAK,EAAEZ,OALT;AAME,QAAA,YAAY,EAAC;AANf;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,OAAO,EAAEO,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYGM,OAAO,CAACC,GAAR,CAAYC,MAAZ,CAZH;AAAA,kBADF;AAiBD;;GAnCQhB,S;;KAAAA,S;AAqCT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\n\nfunction Dashboard() {\n  const [message, setMessage] = useState(\"\");\n  const [response, setResponse] = useState([]);\n  useEffect(() => {\n    const socket = io(\"http://127.0.0.1:3005\");\n    socket.on(\"chat message\", function (data) {\n     setResponse([...response, data]);\n    });\n  }, [response]);\n  const submitForm = (e) => {\n    e.preventDefault();\n    const socket = io(\"http://127.0.0.1:3005\");\n    socket.emit(\"chat message\", message);\n    setMessage(\"\");\n  };\n  // const allmsg = response.map(res=>{\n  //     console.log(res)\n  // })\n  return (\n    <>\n      <form id=\"form\" action=\"\">\n        <input\n          id=\"input\"\n          onChange={(e) => {\n            setMessage(e.target.value);\n          }}\n          value={message}\n          autocomplete=\"off\"\n        />\n        <button onClick={submitForm}>Send</button>\n      </form>\n      {console.log(newRes)}\n      {/* {allmsg} */}\n    </>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}