{"ast":null,"code":"import { TYPINGUSERS } from \"../constants/action-types\";\nimport { MARKTYPINGSTOP } from \"../constants/action-types\";\nconst initialState = {\n  typingUsers: []\n};\n\nconst typingUsersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TYPINGUSERS:\n      if (!state.typingUsers.includes(action.payload)) {\n        return { ...state,\n          typingUsers: [...state.typingUsers, action.payload]\n        };\n      }\n\n      return state;\n\n    case MARKTYPINGSTOP:\n      if (state.typingUsers.includes(action.payload)) {\n        return {\n          typingUsers: state.typingUsers.filter(typingUsers => typingUsers != action.payload)\n        };\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default typingUsersReducer;","map":{"version":3,"sources":["/Users/laptop/Desktop/programming/nodechat/client/src/redux/reducers/typingUsersReducer.js"],"names":["TYPINGUSERS","MARKTYPINGSTOP","initialState","typingUsers","typingUsersReducer","state","action","type","includes","payload","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;;AAGA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAL;AACE,UAAI,CAACK,KAAK,CAACF,WAAN,CAAkBK,QAAlB,CAA2BF,MAAM,CAACG,OAAlC,CAAL,EAAiD;AAC/C,eAAO,EACL,GAAGJ,KADE;AAELF,UAAAA,WAAW,EAAE,CAAC,GAAGE,KAAK,CAACF,WAAV,EAAuBG,MAAM,CAACG,OAA9B;AAFR,SAAP;AAID;;AACD,aAAOJ,KAAP;;AACF,SAAKJ,cAAL;AACE,UAAII,KAAK,CAACF,WAAN,CAAkBK,QAAlB,CAA2BF,MAAM,CAACG,OAAlC,CAAJ,EAAgD;AAC9C,eAAO;AACLN,UAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBO,MAAlB,CACVP,WAAD,IAAiBA,WAAW,IAAIG,MAAM,CAACG,OAD5B;AADR,SAAP;AAKD;;AACD,aAAOJ,KAAP;;AACF;AACE,aAAOA,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,kBAAf","sourcesContent":["import { TYPINGUSERS } from \"../constants/action-types\";\nimport { MARKTYPINGSTOP } from \"../constants/action-types\";\n\nconst initialState = {\n  typingUsers: [],\n};\nconst typingUsersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TYPINGUSERS:\n      if (!state.typingUsers.includes(action.payload)) {\n        return {\n          ...state,\n          typingUsers: [...state.typingUsers, action.payload],\n        };\n      }\n      return state;\n    case MARKTYPINGSTOP:\n      if (state.typingUsers.includes(action.payload)) {\n        return {\n          typingUsers: state.typingUsers.filter(\n            (typingUsers) => typingUsers != action.payload\n          ),\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default typingUsersReducer;\n"]},"metadata":{},"sourceType":"module"}