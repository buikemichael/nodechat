{"ast":null,"code":"import _toConsumableArray from\"/Users/laptop/Desktop/programming/nodechat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/laptop/Desktop/programming/nodechat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{SHOW_MESSAGES}from\"../constants/action-types\";import{ADD_MESSAGE}from\"../constants/action-types\";var initialState={messages:[]};var showMessagesReducer=function showMessagesReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SHOW_MESSAGES:return Object.assign({},state,{messages:action.payload});case ADD_MESSAGE:return _objectSpread(_objectSpread({},state),{},{messages:[].concat(_toConsumableArray(state.messages),[action.payload])});default:return state;}};export default showMessagesReducer;","map":{"version":3,"sources":["/Users/laptop/Desktop/programming/nodechat/client/src/redux/reducers/showMessageReducer.js"],"names":["SHOW_MESSAGES","ADD_MESSAGE","initialState","messages","showMessagesReducer","state","action","type","Object","assign","payload"],"mappings":"uVAAA,OAASA,aAAT,KAA8B,2BAA9B,CACA,OAASC,WAAT,KAA4B,2BAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,EADS,CAArB,CAGA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CAC5D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,aAAL,CACE,MAAOQ,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBJ,KAAlB,CAAyB,CAC9BF,QAAQ,CAAEG,MAAM,CAACI,OADa,CAAzB,CAAP,CAGF,IAAKT,CAAAA,WAAL,CACE,sCAAYI,KAAZ,MAAmBF,QAAQ,8BAAME,KAAK,CAACF,QAAZ,GAAsBG,MAAM,CAACI,OAA7B,EAA3B,GACF,QACE,MAAOL,CAAAA,KAAP,CARJ,CAUD,CAXD,CAaA,cAAeD,CAAAA,mBAAf","sourcesContent":["import { SHOW_MESSAGES } from \"../constants/action-types\";\nimport { ADD_MESSAGE } from \"../constants/action-types\";\n\nconst initialState = {\n  messages: [],\n};\nconst showMessagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_MESSAGES:\n      return Object.assign({}, state, {\n        messages: action.payload,\n      });\n    case ADD_MESSAGE:\n      return { ...state, messages: [...state.messages, action.payload] };\n    default:\n      return state;\n  }\n};\n\nexport default showMessagesReducer;\n"]},"metadata":{},"sourceType":"module"}