{"ast":null,"code":"import { io } from \"socket.io-client\";\nimport Cookies from \"js-cookie\";\nvar query = \"\";\n\nif (Cookies.get(\"connect.sid\")) {\n  query = () => {\n    return Cookies.get(\"connect.sid\").replace(\"s:\", \"\").split(\".\")[0];\n  };\n}\n\nconst socket = io(\"http://localhost:3005\", {\n  query: `session_id=${query}`\n}, {\n  transports: [\"websocket\"]\n}, {\n  withCredentials: true\n});\nsocket.on(\"connect\", function (socket) {\n  console.log(\"Client connected.\");\n});\nsocket.on(\"connect_error\", function (err) {\n  console.log(err);\n});\nexport default socket;","map":{"version":3,"sources":["/Users/laptop/Desktop/programming/nodechat/client/src/config/socket_config.js"],"names":["io","Cookies","query","get","replace","split","socket","transports","withCredentials","on","console","log","err"],"mappings":"AAAA,SAASA,EAAT,QAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAIC,KAAK,GAAG,EAAZ;;AACA,IAAID,OAAO,CAACE,GAAR,CAAY,aAAZ,CAAJ,EAAgC;AAC9BD,EAAAA,KAAK,GAAG,MAAM;AACZ,WAAOD,OAAO,CAACE,GAAR,CAAY,aAAZ,EAA2BC,OAA3B,CAAmC,IAAnC,EAAyC,EAAzC,EAA6CC,KAA7C,CAAmD,GAAnD,EAAwD,CAAxD,CAAP;AACD,GAFD;AAGD;;AACD,MAAMC,MAAM,GAAGN,EAAE,CACf,uBADe,EAEf;AACEE,EAAAA,KAAK,EAAG,cAAaA,KAAM;AAD7B,CAFe,EAKf;AAAEK,EAAAA,UAAU,EAAE,CAAC,WAAD;AAAd,CALe,EAMf;AACEC,EAAAA,eAAe,EAAE;AADnB,CANe,CAAjB;AAUAF,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqB,UAAUH,MAAV,EAAkB;AACrCI,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,CAFD;AAGAL,MAAM,CAACG,EAAP,CAAU,eAAV,EAA2B,UAAUG,GAAV,EAAe;AACxCF,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,CAFD;AAIA,eAAeN,MAAf","sourcesContent":["import { io } from \"socket.io-client\";\nimport Cookies from \"js-cookie\";\n\nvar query = \"\";\nif (Cookies.get(\"connect.sid\")) {\n  query = () => {\n    return Cookies.get(\"connect.sid\").replace(\"s:\", \"\").split(\".\")[0];\n  };\n}\nconst socket = io(\n  \"http://localhost:3005\",\n  {\n    query: `session_id=${query}`,\n  },\n  { transports: [\"websocket\"] },\n  {\n    withCredentials: true,\n  }\n);\nsocket.on(\"connect\", function (socket) {\n  console.log(\"Client connected.\");\n});\nsocket.on(\"connect_error\", function (err) {\n  console.log(err);\n});\n\nexport default socket;\n"]},"metadata":{},"sourceType":"module"}