{"ast":null,"code":"import { TYPINGUSERS } from \"../constants/action-types\";\nimport { MARKTYPINGSTOP } from \"../constants/action-types\";\nconst initialState = {\n  typingUsers: []\n};\n\nconst typingUsersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TYPINGUSERS:\n      if (!state.typingUsers.includes(action.payload)) {\n        return { ...state,\n          typingUsers: [...state.typingUsers, action.payload]\n        };\n      }\n\n      return state;\n\n    case MARKTYPINGSTOP:\n      if (state.typingUsers.includes(action.payload)) {\n        return {\n          typingUsers: state.typingUsers.filter(typingUsers => typingUsers != action.payload)\n        };\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default typingUsersReducer;","map":{"version":3,"sources":["/Users/laptop/Desktop/programming/nodechat/client/src/redux/reducers/typingUsersReducer.js"],"names":["TYPINGUSERS","MARKTYPINGSTOP","initialState","typingUsers","typingUsersReducer","state","action","type","includes","payload","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB;;AAGA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAL;AACI,UAAI,CAACK,KAAK,CAACF,WAAN,CAAkBK,QAAlB,CAA2BF,MAAM,CAACG,OAAlC,CAAL,EAAiD;AAC7C,eAAO,EACH,GAAGJ,KADA;AAEHF,UAAAA,WAAW,EAAE,CAAC,GAAGE,KAAK,CAACF,WAAV,EAAuBG,MAAM,CAACG,OAA9B;AAFV,SAAP;AAIH;;AACD,aAAOJ,KAAP;;AACJ,SAAKJ,cAAL;AACI,UAAII,KAAK,CAACF,WAAN,CAAkBK,QAAlB,CAA2BF,MAAM,CAACG,OAAlC,CAAJ,EAAgD;AAC5C,eAAO;AACHN,UAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBO,MAAlB,CACRP,WAAD,IAAiBA,WAAW,IAAIG,MAAM,CAACG,OAD9B;AADV,SAAP;AAKH;;AACD,aAAOJ,KAAP;;AACJ;AACI,aAAOA,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,kBAAf","sourcesContent":["import { TYPINGUSERS } from \"../constants/action-types\";\nimport { MARKTYPINGSTOP } from \"../constants/action-types\";\n\nconst initialState = {\n    typingUsers: [],\n};\nconst typingUsersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TYPINGUSERS:\n            if (!state.typingUsers.includes(action.payload)) {\n                return {\n                    ...state,\n                    typingUsers: [...state.typingUsers, action.payload],\n                };\n            }\n            return state;\n        case MARKTYPINGSTOP:\n            if (state.typingUsers.includes(action.payload)) {\n                return {\n                    typingUsers: state.typingUsers.filter(\n                        (typingUsers) => typingUsers != action.payload\n                    ),\n                };\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default typingUsersReducer;\n"]},"metadata":{},"sourceType":"module"}